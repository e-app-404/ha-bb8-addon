{
    "$schema": "http://json-schema.org/hestia-v7/schema#",
    "title": "registry_validation_log.json meta-schema",
    "name": "HESTIA Validation Log Registry Schema Structure",
    "description": "Schema for the validation log registry that tracks all validation events across HESTIA registries",
    "type": "object",
    "required": ["_meta", "validation_entries", "statistics"],
    "properties": {
      "_meta": {
        "type": "object",
        "required": ["version", "generated_at", "retained_history_days"],
        "properties": {
          "version": { 
            "type": "string",
            "description": "Version of the validation log schema",
            "example": "1.2.0"
          },
          "generated_at": { 
            "type": "string", 
            "format": "date-time",
            "description": "Timestamp when this log was last updated",
            "example": "2025-04-29T10:15:30Z"
          },
          "retained_history_days": { 
            "type": "integer",
            "minimum": 1,
            "description": "Number of days validation history is retained",
            "example": 90
          },
          "log_rotation_policy": {
            "type": "string",
            "enum": ["overwrite_oldest", "archive", "compress"],
            "description": "Policy for handling old log entries",
            "example": "archive"
          }
        }
      },
      "validation_entries": {
        "type": "array",
        "description": "Chronological list of all validation events",
        "items": {
          "type": "object",
          "required": [
            "timestamp",
            "target_registry",
            "validator_id",
            "validation_type",
            "result",
            "issues"
          ],
          "properties": {
            "entry_id": {
              "type": "string",
              "description": "Unique identifier for this validation entry",
              "example": "val_20250429_1015_alpha"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "When this validation was performed",
              "example": "2025-04-29T10:15:30Z"
            },
            "target_registry": {
              "type": "string",
              "description": "Registry file that was validated",
              "example": "alpha_device_registry.json"
            },
            "validator_id": {
              "type": "string",
              "description": "Identifier of the validator component",
              "example": "MetaStructor-v2.3"
            },
            "validation_type": {
              "type": "string",
              "enum": ["schema", "integrity", "cross-reference", "content", "confidence", "full"],
              "description": "Type of validation performed",
              "example": "full"
            },
            "result": {
              "type": "string",
              "enum": ["pass", "warning", "fail", "error"],
              "description": "Overall validation result",
              "example": "warning"
            },
            "summary": {
              "type": "string",
              "description": "Human-readable summary of validation result",
              "example": "Validation passed with 3 warnings regarding confidence metrics"
            },
            "issues": {
              "type": "array",
              "description": "Detailed list of identified issues",
              "items": {
                "type": "object",
                "required": ["severity", "code", "message", "location"],
                "properties": {
                  "severity": {
                    "type": "string",
                    "enum": ["error", "warning", "info"],
                    "description": "Severity level of the issue",
                    "example": "warning"
                  },
                  "code": {
                    "type": "string",
                    "description": "Machine-readable error code",
                    "example": "CONF_LOW_SCORE"
                  },
                  "message": {
                    "type": "string",
                    "description": "Human-readable issue description",
                    "example": "Confidence score below threshold (45 < 50)"
                  },
                  "location": {
                    "type": "object",
                    "description": "Where in the registry the issue was found",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "JSON path to the issue location",
                        "example": "devices.bedroom_motion_α.confidence_metrics.entity_confidence"
                      },
                      "line": {
                        "type": "integer",
                        "description": "Line number in the file (if available)",
                        "example": 234
                      },
                      "entity_id": {
                        "type": "string",
                        "description": "Entity ID related to the issue",
                        "example": "bedroom_motion_α"
                      }
                    }
                  },
                  "value": {
                    "type": ["string", "number", "boolean", "null", "object"],
                    "description": "Current problematic value",
                    "example": 45
                  },
                  "expected": {
                    "type": ["string", "number", "boolean", "null", "object", "array"],
                    "description": "Expected value or constraints",
                    "example": "≥ 50"
                  },
                  "fix_suggestion": {
                    "type": "string",
                    "description": "Suggested resolution for the issue",
                    "example": "Verify entity_id match with device registry"
                  },
                  "fixed": {
                    "type": "boolean",
                    "description": "Whether this issue was automatically fixed",
                    "example": false
                  },
                  "fixed_by": {
                    "type": "string",
                    "description": "Component that fixed the issue (if applicable)",
                    "example": "MetaStructor-AutoFix"
                  },
                  "fixed_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the issue was fixed"
                  }
                }
              }
            },
            "performance": {
              "type": "object",
              "description": "Performance metrics for this validation run",
              "properties": {
                "duration_ms": {
                  "type": "integer",
                  "description": "Validation execution time in milliseconds",
                  "example": 1250
                },
                "memory_usage_kb": {
                  "type": "integer",
                  "description": "Memory used during validation",
                  "example": 42560
                },
                "entities_processed": {
                  "type": "integer",
                  "description": "Number of entities processed",
                  "example": 187
                }
              }
            },
            "changes": {
              "type": "array",
              "description": "Changes made as a result of validation",
              "items": {
                "type": "object",
                "required": ["entity_id", "field", "old_value", "new_value", "reason"],
                "properties": {
                  "entity_id": {
                    "type": "string",
                    "description": "ID of the changed entity",
                    "example": "bedroom_motion_α"
                  },
                  "field": {
                    "type": "string",
                    "description": "Path to the changed field",
                    "example": "device_info.firmware"
                  },
                  "old_value": {
                    "type": ["string", "number", "boolean", "null", "object"],
                    "description": "Previous value",
                    "example": "1.2.3"
                  },
                  "new_value": {
                    "type": ["string", "number", "boolean", "null", "object"],
                    "description": "Updated value",
                    "example": "1.2.4"
                  },
                  "reason": {
                    "type": "string",
                    "description": "Reason for the change",
                    "example": "Updated to match manufacturer specifications"
                  },
                  "confidence": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Confidence in this change",
                    "example": 95
                  }
                }
              }
            }
          }
        }
      },
      "statistics": {
        "type": "object",
        "description": "Aggregate statistics about validation history",
        "properties": {
          "registries_summary": {
            "type": "object",
            "description": "Validation stats by registry",
            "patternProperties": {
              "^[a-z0-9_]+\\.json$": {
                "type": "object",
                "properties": {
                  "total_validations": {
                    "type": "integer",
                    "description": "Total number of validations",
                    "example": 247
                  },
                  "last_validation": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Most recent validation timestamp",
                    "example": "2025-04-29T10:15:30Z"
                  },
                  "pass_rate": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Percentage of passing validations",
                    "example": 98.3
                  },
                  "current_status": {
                    "type": "string",
                    "enum": ["valid", "warning", "invalid", "unknown"],
                    "description": "Current validation status",
                    "example": "valid"
                  },
                  "total_issues": {
                    "type": "object",
                    "description": "Issue counts by severity",
                    "properties": {
                      "error": {
                        "type": "integer",
                        "description": "Error count",
                        "example": 0
                      },
                      "warning": {
                        "type": "integer",
                        "description": "Warning count",
                        "example": 3
                      },
                      "info": {
                        "type": "integer",
                        "description": "Info count",
                        "example": 12
                      }
                    }
                  },
                  "common_issues": {
                    "type": "array",
                    "description": "Most frequent issue types",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Issue code",
                          "example": "CONF_LOW_SCORE"
                        },
                        "count": {
                          "type": "integer",
                          "description": "Occurrence count",
                          "example": 5
                        },
                        "first_seen": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When first observed",
                          "example": "2025-04-15T08:30:00Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "trending_issues": {
            "type": "array",
            "description": "Issues showing increasing frequency",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Issue code",
                  "example": "MISSING_FIRMWARE"
                },
                "trend": {
                  "type": "number",
                  "description": "Change in frequency (percentage points)",
                  "example": 12.5
                },
                "affected_registries": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "alpha_device_registry.json"
                  }
                }
              }
            }
          },
          "validator_performance": {
            "type": "object",
            "description": "Performance metrics by validator",
            "patternProperties": {
              "^[a-zA-Z0-9_-]+$": {
                "type": "object",
                "properties": {
                  "avg_duration_ms": {
                    "type": "number",
                    "description": "Average execution time",
                    "example": 1342.7
                  },
                  "max_duration_ms": {
                    "type": "integer",
                    "description": "Maximum execution time",
                    "example": 4250
                  },
                  "avg_memory_kb": {
                    "type": "number",
                    "description": "Average memory usage",
                    "example": 38720.5
                  },
                  "error_rate": {
                    "type": "number",
                    "description": "Percentage of validator errors",
                    "example": 0.2
                  }
                }
              }
            }
          }
        }
      },
      "retention_policy": {
        "type": "object",
        "description": "Policy for log retention and archiving",
        "properties": {
          "max_entries": {
            "type": "integer",
            "description": "Maximum number of entries to retain",
            "example": 10000
          },
          "archive_path": {
            "type": "string",
            "description": "Path for archived logs",
            "example": "/config/hestia/archive/validation_logs/"
          },
          "compression": {
            "type": "boolean",
            "description": "Whether to compress archived logs",
            "example": true
          }
        }
      }
    },
    "additionalProperties": false
  }