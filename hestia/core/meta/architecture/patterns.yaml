patterns:
  - name: direct_comparison_to_now
    match: |
      "{{ now() > states('input_datetime.foo') }}"
    replace: |
      {% set raw = states('input_datetime.foo') %}
      {% set t = as_datetime(raw) if raw not in ['unknown','unavailable',''] else None %}
      {{ t is not none and now() > t }}

  - name: compare_two_parsed_datetimes
    match: |
      "{{ as_datetime(x) > as_datetime(y) }}"
    replace: |
      {% set xdt = as_datetime(x) %}
      {% set ydt = as_datetime(y) %}
      {{ xdt is not none and ydt is not none and xdt > ydt }}
  - name: mixing_aware_naive
    match: |
      "{% set t = strptime(some_string, '%Y-%m-%d %H:%M:%S') %}\n{{ now() > t }}"
    replace: |
      {% set t = as_datetime(some_string) %}
      {{ t is not none and now() > t }}
  - name: timestamp_math_without_guards
    match: |
      "{{ (now() - as_datetime(x)).total_seconds() > 900 }}"
    replace: |
      {% set t = as_datetime(x) %}
      {{ t is not none and (now() - t).total_seconds() > 900 }}

general_rules:
  - Always gate on is not none.
  - Normalize inputs from states with raw not in ['unknown','unavailable',''].
  - Use now() everywhere (HA returns timezone-aware) unless you explicitly standardize both sides to UTC.
