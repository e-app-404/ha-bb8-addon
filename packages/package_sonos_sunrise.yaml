# ══════════════════════════════════════════════════════════════════
# ⟫⟫ SONOS ALARM  •  Optional Expansion: Sunrise Lighting  ◀
# ⟫⟫ configuration.yaml  •  packages: !include_dir_named integrations
# ⟫⟫ Tier: γ  •  Domain: automation  •  Created: 2025-08-05
# ══════════════════════════════════════════════════════════════════
input_boolean:
  sonos_sunrise_enable:
    name: "Enable Sunrise Light Prelude"
    icon: mdi:weather-sunset-up
    initial: off

input_number:
  sonos_sunrise_light_start_brightness:
    name: "Sunrise Start Brightness"
    min: 1
    max: 255
    step: 5
    initial: 1
  sonos_sunrise_light_final_brightness:
    name: "Sunrise Final Brightness"
    min: 1
    max: 255
    step: 5
    initial: 200

automation:
  - alias: "Sunrise Light Sequence Before Sonos Alarm"
    id: sonos_sunrise_light_rampup
    trigger:
      - platform: template
        value_template: |
          {% set alarm = states('input_datetime.sonos_alarm_time') %}
          {% if alarm not in ['unknown', 'unavailable', None, ''] %}
            {% set alarm_dt = strptime(alarm, '%H:%M:%S') %}
            {% set now_dt = now().replace(year=1900, month=1, day=1) %}
            {% set offset_dt = (alarm_dt - timedelta(minutes=30)) %}
            {{ now_dt.strftime('%H:%M') == offset_dt.strftime('%H:%M') }}
          {% else %}
            false
          {% endif %}
    condition:
      - condition: state
        entity_id: input_boolean.sonos_alarm_enable
        state: "on"
      - condition: state
        entity_id: input_boolean.sonos_sunrise_enable
        state: "on"
    action:
      - variables:
          start_b: "{{ states('input_number.sonos_sunrise_light_start_brightness') | int }}"
          final_b: "{{ states('input_number.sonos_sunrise_light_final_brightness') | int }}"
          b_step: "{{ ((final_b - start_b) / 6) | round(0) }}"
          start_k: 2200
          final_k: 4500
          k_step: "{{ ((final_k - start_k) / 6) | round(0) }}"
      - repeat:
          count: 6
          sequence:
            - service: light.turn_on
              target:
                entity_id: group.bedroom_lights_bed_area
              data:
                brightness: "{{ start_b + (b_step * repeat.index) }}"
                color_temp_kelvin: "{{ start_k + (k_step * repeat.index) }}"
                transition: 60
            - delay: "00:05:00"
    mode: single
