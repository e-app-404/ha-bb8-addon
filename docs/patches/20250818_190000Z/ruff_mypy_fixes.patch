*** Update File: tests/test_facade.py
@@ def test_sleep_mapping(monkeypatch):
-    for i in range(5):
-        f.set_led_rgb(10, 0, 0)
+    for _i in range(5):
+        f.set_led_rgb(10, 0, 0)
*** Update File: tools/scan_bb8_gatt.py
@@ async def main(adapter, bb8_name):
-        print(
-            "BB-8 not found. Is it awake and advertising? Try tapping or removing from charger."
-        )
+        print(
+            "BB-8 not found. Is it awake and advertising? "
+            "Try tapping or removing from charger."
+        )
@@ async def main(adapter, bb8_name):
-                print(
-                    f"  [Characteristic] {char.uuid} | {char.description} | properties: {props}"
-                )
+                print(
+                    f"  [Characteristic] {char.uuid} | {char.description} | "
+                    f"properties: {props}"
+                )
*** Update File: tools/trace_smoke_check.py
@@ for entry in lines:
-    if (
-        isinstance(entry, dict)
-        and entry.get("source") == "device"
-        and isinstance(entry.get("value"), (int, float, str))
-    ):
-        found_device_scalar = True
-        break
+    if (
+        isinstance(entry, dict)
+        and entry.get("source") == "device"
+        and isinstance(entry.get("value"), int | float | str)
+    ):
+        found_device_scalar = True
+        break
@@ for entry in lines:
-    if isinstance(entry, dict) and all(k in entry for k in ("r", "g", "b")) and not all(isinstance(entry[k], int) for k in ("r", "g", "b")):
-        print(f"FAIL: LED entry not int: {entry}")
-        sys.exit(1)
+    if (
+        isinstance(entry, dict)
+        and all(k in entry for k in ("r", "g", "b"))
+        and not all(isinstance(entry[k], int) for k in ("r", "g", "b"))
+    ):
+        print(f"FAIL: LED entry not int: {entry}")
+        sys.exit(1)
