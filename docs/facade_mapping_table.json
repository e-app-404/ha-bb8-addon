{
  "contract_id": "facade_io_schemas",
  "version": "1.0.0",
  "generated_at": "2025-08-11T00:00:00Z",
  "source": {
    "module": "bb8_core/facade.py",
    "class": "BB8Facade",
    "notes": "Schemas extracted from PR patch; MQTT payloads are bytes on the wire but modeled here with semantic types and explicit encodings."
  },
  "$schema": "http://json-schema.org/draft-07/schema#",

 "device_defaults": {
    "slug": "bb8-eded87d72750",
    "manufacturer": "Sphero",
    "model": "S33 BB84 LE",
    "name": "BB-8",

    "identifiers": [
      "ble:ED:ED:87:D7:27:50",
      "uuid:0000fe07-0000-1000-8000-00805f9b34fb",
      "mqtt:bb8-eded87d72750"
    ],

    "connections": [
      ["mac",  "ED:ED:87:D7:27:50"],
      ["dbus", "/org/bluez/hci0/dev_ED_ED_87_D7_27_50"]
    ],
    "serial_number": "mfd.1447:f48f924b380a3096eb",
    "sw_version": "addon:{ADDON_VERSION}"
  },
  "availability": {
    "availability_topic": "bb8/status",
    "payload_available": "online",
    "payload_not_available": "offline",
    "qos": 1,
    "retain": true
  },

   "birth_will": {
    "birth":     { "topic": "bb8/status", "payload": "online",  "qos": 1, "retain": true },
    "last_will": { "topic": "bb8/status", "payload": "offline", "qos": 1, "retain": true }
  },
  "methods": {
    "attach_mqtt": {
      "discovery": {
        "device_block": { "$ref": "#/device_defaults" },
        "availability_block": { "$ref": "#/availability" },
        "unique_ids": {
          "presence": "bb8_presence_eded87d72750",
          "rssi":     "bb8_rssi_eded87d72750"
        }
      }
    }
  },
  "definitions": {
    "BoolStringONOFF": { "type": "string", "enum": ["ON", "OFF"] },
    "RgbTriplet": {
      "type": "object",
      "additionalProperties": false,
      "required": ["r", "g", "b"],
      "properties": {
        "r": { "type": "integer", "minimum": 0, "maximum": 255 },
        "g": { "type": "integer", "minimum": 0, "maximum": 255 },
        "b": { "type": "integer", "minimum": 0, "maximum": 255 }
      }
    },
    "HexColor": {
      "type": "object",
      "additionalProperties": false,
      "required": ["hex"],
      "properties": { "hex": { "type": "string", "pattern": "^#?[0-9a-fA-F]{6}$" } }
    },
    "LedSetUnion": {
      "oneOf": [
        { "$ref": "#/definitions/RgbTriplet" },
        { "$ref": "#/definitions/HexColor" },
        { "type": "string", "const": "OFF" }
      ]
    },
    "LedState": {
      "oneOf": [
        { "type": "object", "additionalProperties": false, "required": ["state"], "properties": { "state": { "type": "string", "const": "OFF" } } },
        { "$ref": "#/definitions/RgbTriplet" }
      ]
    },
    "QosEnum": { "type": "integer", "enum": [0, 1, 2] },
    "RssiWire": { "type": "string", "pattern": "^-?\\d+$", "description": "RSSI as decimal string (dBm)." }
  },

  "methods_2": {
    "power": {
      "description": "High-level power control; delegates to bridge.connect() or bridge.sleep(None).",
      "input_schema": { "type": "object", "required": ["on"], "additionalProperties": false, "properties": { "on": { "type": "boolean" } } },
      "output_schema": { "type": "null" },
      "side_effects": ["bridge.connect()", "bridge.sleep(None)"]
    },
    "stop": { "input_schema": { "type": "null" }, "output_schema": { "type": "null" }, "side_effects": ["bridge.stop()"] },
    "set_led_off": { "input_schema": { "type": "null" }, "output_schema": { "type": "null" }, "side_effects": ["bridge.set_led_off()"] },
    "set_led_rgb": {
      "input_schema": { "$ref": "#/definitions/RgbTriplet" },
      "output_schema": { "type": "null" },
      "normalization": "Inputs clamped to [0,255] and cast to int.",
      "side_effects": ["bridge.set_led_rgb(r,g,b)"]
    },
    "is_connected": { "input_schema": { "type": "null" }, "output_schema": { "type": "boolean" } },
    "get_rssi": { "input_schema": { "type": "null" }, "output_schema": { "type": "integer", "description": "RSSI in dBm" } },

    "attach_mqtt": {
      "description": "Bind MQTT subscriptions, discovery, availability (birth/LWT) and publishers.",
      "input_schema": {
        "type": "object",
        "required": ["client", "base_topic"],
        "additionalProperties": true,
        "properties": {
          "client": { "type": "object" },
          "base_topic": { "type": "string", "minLength": 1 },
          "qos": { "$ref": "#/definitions/QosEnum", "default": 1 },
          "retain": { "type": "boolean", "default": true },
          "device": { "type": "object", "default": { "$ref": "#/device_defaults" } }
        }
      },
      "output_schema": { "type": "null" },
      "discovery": {
        "publisher": "publish_discovery(client, base_topic, device, availability, qos, retain)",
        "idempotent": true,
        "device_block": { "$ref": "#/device_defaults" },
        "availability_block": { "$ref": "#/availability" },
        "unique_ids": {
          "presence": "bb8_presence_eded87d72750",
          "rssi":     "bb8_rssi_eded87d72750"
        }
      }
    }
  },

  "mqtt_topics": [
    { "topic": "{base}/power/set",   "direction": "subscribe", "qos": 1, "retain": false, "payload_schema": { "$ref": "#/definitions/BoolStringONOFF" } },
    { "topic": "{base}/power/state", "direction": "publish",   "qos": 1, "retain": true,  "payload_schema": { "$ref": "#/definitions/BoolStringONOFF" } },
    { "topic": "{base}/stop/press",  "direction": "subscribe", "qos": 1, "retain": false, "payload_schema": { "oneOf": [ { "type": "string" }, { "type": "object" }, { "type": "number" }, { "type": "null" } ] } },
    { "topic": "{base}/stop/state",  "direction": "publish",   "qos": 1, "retain": false, "payload_schema": { "type": "string", "enum": ["pressed","idle"] } },
    { "topic": "{base}/led/set",     "direction": "subscribe", "qos": 1, "retain": false, "payload_schema": { "oneOf": [ { "$ref": "#/definitions/LedSetUnion" }, { "type": "string" } ] } },
    { "topic": "{base}/led/state",   "direction": "publish",   "qos": 1, "retain": true,  "payload_schema": { "$ref": "#/definitions/LedState" } },

    { "topic": "{base}/presence/state", "direction": "publish", "qos": 1, "retain": true, "payload_schema": { "$ref": "#/definitions/BoolStringONOFF" } },
    { "topic": "{base}/rssi/state",     "direction": "publish", "qos": 1, "retain": true, "payload_schema": { "$ref": "#/definitions/RssiWire" } },

    { "topic": "bb8/status", "direction": "publish", "qos": 1, "retain": true, "payload_schema": { "type": "string", "enum": ["online","offline"] } }
  ],

  "bridge_contract_surface": {
    "required_methods": ["connect","sleep","stop","set_led_off","set_led_rgb","is_connected","get_rssi"],
    "optional_methods": ["attach_mqtt(client, base_topic, qos=1, retain=true)"]
  },

  "operational_constraints": [
    "All MQTT discovery payloads include device.identifiers and device.connections.",
    "Broker connection sets birth (online) and LWT (offline) on topic bb8/status.",
    "Presence/RSSI retained; stop/state nonâ€‘retained and transient."
  ]
}
