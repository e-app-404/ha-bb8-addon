rehydration_seed:
  personas:
    strategos:
      id: "strategos_v1.3_20250618"
      role: "Executive Project Strategist & Integration Delivery Manager"
      files:
        system_instruction: "/mnt/data/system_instruction.yaml"
        core_persona: "/mnt/data/2025-06-18_strategos_v1.3.yaml"
        expansion_pack: "/mnt/data/20250803_xp_strategos_v1.6.yaml"
        dual_mode: "/mnt/data/dual_mode_xp_v1_250615.yaml" # optional if present
      routing_rules:
        allow: ["Pythagoras"]
        deny: ["Copilot"]
        handoff_mode: "contract_only"
        artifacts_out: ["execution_mandate", "delta_contract"]
        artifacts_in: ["qa_report", "patch_bundle_summary"]

    pythagoras:
      id: "pythagoras_v3_refactored"
      role: "Code Implementer & QA Engineer (Copilot-facing)"
      files:
        core_persona: "/mnt/data/pythagoras_v3_refactored.yaml"
        expansion_pack: "/mnt/data/pythagoras_expansion_v3.yaml"
        dual_mode: "/mnt/data/dual_mode_xp_v1_250615.yaml"
      integration_targets: ["Copilot"]
      enforced_outputs: ["patch_bundle_contract_v1", "qa_report_contract_v1"]
      callback_to: "Strategos"

  project:
    label: "BB-8 Bridge • STP4 strict + device-echo graduation"
    namespace: "bb8/<behavior>/<action>" # flat
    repository_roots:
      addon_config: "beep_boop_bb8/config.yaml"
      bridge: "beep_boop_bb8/bb8_core/bridge_controller.py"
      facade: "beep_boop_bb8/bb8_core/facade.py"
      ble_link: "beep_boop_bb8/bb8_core/ble_link.py"
      scanner: "beep_boop_bb8/bb8_core/bb8_presence_scanner.py"
      evidence_collector: "beep_boop_bb8/ops/evidence/collect_stp4.py"
      guidelines: "/beep_boop_bb8/ops/_guidelines.md"
      handover_dir: "local/beep_boop_bb8/ops/rehydration"

  status_summary:
    stp4_with_shim: "PASS (facade echoes accepted; evidence pipeline fixed)"
    stp4_strict_device: "READY TO ATTEST (shim OFF; device echoes implemented; run strict evidence)"
    known_gaps: [] # prerequisites landed; evidence attestation pending
    discovery_policy:
      owner: "scanner (single SoT)"
      pattern_examples:
        presence: "bb8/presence/state  (retain=true)"
        rssi: "bb8/rssi/state      (retain=true)"
        power: "bb8/power/state     (retain=false)"
        led: "bb8/led/state       (retain=false) -> payload {r,g,b}"

  environment_toggles:
    MQTT_BASE: "bb8"
    ENABLE_BRIDGE_TELEMETRY: 1
    REQUIRE_DEVICE_ECHO: 1
    EVIDENCE_TIMEOUT_SEC: 3.0

  governance:
    empirical_validation: true
    binary_acceptance: true
    evidence_tolerance_level: 0
    confidence_minimum: 0.85
    drift_score: "low"
    patch_etiquette_doc: "/beep_boop_bb8/ops/_guidelines.md"

  acceptance_criteria_next_checkpoint:
    id: "STP4-STRICT-GRAD"
    must_meet:
      - "evidence_manifest.roundtrip == PASS"
      - "evidence_manifest.schema == PASS"
      - "No 'There is no current event loop' warnings"
      - "Scalar echoes include source:'device' when REQUIRE_DEVICE_ECHO=1"
    notes:
      - "LED/state remains pure RGB JSON {r,g,b} (no 'source'); exempt from source gate"

  artifacts_index:
    evidence:
      - "/mnt/data/evidence_manifest.json"
      - "/mnt/data/ha_mqtt_trace_snapshot.jsonl or .json"
      - "/mnt/data/ha_discovery_dump.json"
    code_contracts:
      - "beep_boop_bb8/ops/evidence/collect_stp4.py"
      - "beep_boop_bb8/bb8_core/bb8_presence_scanner.py"
      - "beep_boop_bb8/bb8_core/bridge_controller.py"
      - "beep_boop_bb8/bb8_core/facade.py"
      - "beep_boop_bb8/bb8_core/ble_link.py"

  execution_handoff:
    from: "Strategos"
    to: "Pythagoras"
    execution_mandate:
      objective: "Graduate STP4 to strict device-echo mode; ensure shim cannot influence strict tests"
      target_paths:
        - "bb8_core/bridge_controller.py"
        - "bb8_core/facade.py"
        - "bb8_core/common.py (new, if needed)"
      tasks:
        - "Publish device echoes on power/stop/sleep/drive/heading/speed as raw scalars and/or {'value':..., 'source':'device'} (retain=false)"
        - "Publish LED/state as {'r','g','b'} only (retain=false)"
        - "Run BLE coroutines on a dedicated asyncio event-loop thread"
        - "Ensure shim disabled under REQUIRE_DEVICE_ECHO=1"
      qa_suite:
        - "black --check ."
        - "ruff check ."
        - "mypy --install-types --non-interactive ."
        - "pytest -q --maxfail=1 --disable-warnings --cov=bb8_core --cov-report=term-missing"
        - "bandit -q -r bb8_core || true"
        - "safety scan --full-report || true"
      acceptance_gates:
        - "qa_report.verdict == PASS"
        - "coverage >= 80%"
        - "lint clean & types ok & no high-sev security findings"
      delivery:
        - "patch_bundle_contract_v1"
        - "qa_report_contract_v1"

  runbook_next_actions:
    - step: "Ensure shim is stopped; set REQUIRE_DEVICE_ECHO=1 & ENABLE_BRIDGE_TELEMETRY=1"
    - step: "Run strict evidence collection locally"
    - step: "Return evidence (manifest, trace, log excerpt) for binary acceptance"
    - step: "If PASS, stamp checkpoint STP4-STRICT-GRAD and merge"

  guardrails:
    chat_routing:
      strategos_to_copilot: "forbidden"
      strategos_to_pythagoras: "artifacts only (contract→report)"
      pythagoras_to_copilot: "allowed (execution channel)"
    namespace_policy: "flat 'bb8/...'; no new hierarchies"
    discovery_ownership: "scanner only; dispatcher discovery disabled by default"
