diff --git a/bb8_core/ble_link.py b/bb8_core/ble_link.py
index 8c11dcb..a2f9f77 100644
--- a/bb8_core/ble_link.py
+++ b/bb8_core/ble_link.py
@@ -1,11 +1,14 @@
 from __future__ import annotations

 import asyncio
 import logging
 from concurrent.futures import Future
-from typing import Optional, Callable, Awaitable
+from typing import Optional, Awaitable, Any

 log = logging.getLogger(__name__)

 # Dedicated loop supplied by bridge_controller.
 _loop: Optional[asyncio.AbstractEventLoop] = None
 _runner_future: Optional[Future] = None
 _started: bool = False
@@ -73,6 +76,45 @@ def run_coro(coro: Awaitable) -> Future:
     if _loop is None:
         raise RuntimeError("BLE loop not set; call set_loop() first")
     return asyncio.run_coroutine_threadsafe(coro, _loop)
+
+
+# ---------------------------------------------------------------------------
+# Compatibility facade for callers importing `BLELink`
+# ---------------------------------------------------------------------------
+class BLELink:
+    """
+    Minimal facade to satisfy callers/tests that expect a BLELink class.
+    Internally delegates to the module-level runner functions above.
+    """
+
+    def __init__(self, mac: Optional[str] = None, adapter: Optional[str] = None):
+        self.mac = mac
+        self.adapter = adapter
+
+    def start(self) -> None:
+        """Start the shared BLE runner (idempotent)."""
+        start()
+
+    def stop(self, timeout: float = 2.5) -> None:
+        """Stop the shared BLE runner cleanly."""
+        stop(timeout=timeout)
+
+    def submit(self, coro: Awaitable[Any]) -> Future:
+        """
+        Schedule a coroutine onto the dedicated BLE loop.
+        Example: link.submit(device.connect())
+        """
+        return run_coro(coro)
+
+    # Optional convenience shims if legacy code calls these:
+    def set_loop(self, loop: asyncio.AbstractEventLoop) -> None:  # noqa: D401
+        """Delegate to module-level set_loop()."""
+        set_loop(loop)
+
+
+__all__ = [
+    "set_loop",
+    "start",
+    "stop",
+    "run_coro",
+    "BLELink",
+]
